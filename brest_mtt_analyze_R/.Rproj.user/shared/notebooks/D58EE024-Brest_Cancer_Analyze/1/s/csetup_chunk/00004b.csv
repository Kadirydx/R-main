"0","# ️ Data Import"
"0","# (Şu anda t24, t48 ve t72 aynı CSV'den geliyor. İleride farklı dosyalar kullanırsan değiştirebilirsin.)"
"0","t24 <- as.data.frame(read_csv2(""data/t24.csv"", col_names = FALSE))"
"2","[36mℹ[39m Using [34m[34m""','""[34m[39m as decimal and [34m[34m""'.'""[34m[39m as grouping mark. Use `read_delim()` for more control.
"
"2","[1mRows: [22m[34m9[39m [1mColumns: [22m[34m12[39m"
"2","[36m──[39m [1mColumn specification[22m [36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[39m
[1mDelimiter:[22m "";""
[31mchr[39m  (1): X1
[32mdbl[39m (11): X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12"
"2","
[36mℹ[39m Use `spec()` to retrieve the full column specification for this data.
[36mℹ[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","t48 <- as.data.frame(read_csv2(""data/t48.csv"", col_names = FALSE))"
"2","[36mℹ[39m Using [34m[34m""','""[34m[39m as decimal and [34m[34m""'.'""[34m[39m as grouping mark. Use `read_delim()` for more control.
"
"2","[1mRows: [22m[34m9[39m [1mColumns: [22m[34m12[39m"
"2","[36m──[39m [1mColumn specification[22m [36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[39m
[1mDelimiter:[22m "";""
[31mchr[39m  (1): X1
[32mdbl[39m (11): X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12"
"2","
[36mℹ[39m Use `spec()` to retrieve the full column specification for this data.
[36mℹ[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","t72 <- as.data.frame(read_csv2(""data/t72.csv"", col_names = FALSE))"
"2","[36mℹ[39m Using [34m[34m""','""[34m[39m as decimal and [34m[34m""'.'""[34m[39m as grouping mark. Use `read_delim()` for more control.
"
"2","[1mRows: [22m[34m9[39m [1mColumns: [22m[34m13[39m"
"2","[36m──[39m [1mColumn specification[22m [36m─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[39m
[1mDelimiter:[22m "";""
[31mchr[39m  (1): X1
[32mdbl[39m (12): X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13"
"2","
[36mℹ[39m Use `spec()` to retrieve the full column specification for this data.
[36mℹ[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","# Set Rows and Columns (Sabit 8x12 yapı)"
"0","rows <- LETTERS[1:8]       # Satır isimleri: A–H"
"0","cols <- as.character(1:12) # Sütun isimleri: 1–12"
"0","rep_24 <- c(2, 4:11)"
"0","rep_48 <- c(3:11)"
"0","rep_72 <- c(3:11)"
"0",""
"0","# t24 <- t24 %>% relocate(X1, .after = everything())"
"0","# t24 <- t24[-1,]"
"0","# t24[,c(1,12)] <- NA"
"0","# "
"0","# rownames(t24) <- rows"
"0","# colnames(t24) <- cols"
"0","# "
"0","# t48 <- t48 %>% relocate(X1, .after = everything())"
"0",""
"0",""
"0","# Önceden 'rows' ve 'cols' vektörlerini tanımlamış olman gerekiyor:"
"0","# Örnek:"
"0","# rows <- paste0(""row"", 1:(nrow(df) - 1)) # Satır isimleri (bir satır silindiği için -1)"
"0","# cols <- paste0(""col"", 1:12)             # 12 kolon ismi"
"0",""
"0","for (df_name in c(""t24"", ""t48"", ""t72"")) {"
"0","  df <- get(df_name)"
"0","  df <- df[, 1:12]"
"0","  df <- df %>% relocate(X1, .after = everything())"
"0","  df <- df[-1, ]"
"0","  df[, c(1, 12)] <- NA"
"0","  "
"0","  #  rownames ve colnames üret"
"0","  # rows <- paste0(""row"", 1:nrow(df))"
"0","  # cols <- paste0(""col"", 1:12)"
"0","  "
"0","  rownames(df) <- 1:nrow(df)"
"0","  colnames(df) <- 1:12"
"0","  df <- as.matrix(df)"
"0","  assign(df_name, df)"
"0","}"
"0",""
"0",""
"0","# böylelikle üc farklı datayı da aynı şekle sokmuş olduk"
"0","#  Create Condition Matrix"
"0","cond_matrix <- matrix("
"0","  data = ""PBS"",    # ilk ve son kuycuklar pbs"
"0","  nrow = 8,"
"0","  ncol = 12,"
"0","  dimnames = list(rows, cols)"
"0",")"
"0",""
"0","# Assign Drug Doses (A–E satırları, 3–11 sütunlar arası)"
"0","dose_rows <- c(""A"", ""B"", ""C"", ""D"", ""E"")"
"0","dose_values <- c(""1 uM +C"", ""5 uM +C"", ""12.5 uM +C"", ""25 uM +C"", ""50 M +C"")"
"0",""
"0","for (i in seq_along(dose_rows)) {"
"0","  cond_matrix[dose_rows[i], 3:11] <- dose_values[i]"
"0","}"
"0",""
"0","# Assign Special Controls"
"0","cond_matrix[, 2]      <- ""BLANK(-D, -dmso, -C)""             # 2. sütun: Blank kontrol"
"0","cond_matrix[""F"", 3:11] <- ""TRUE CONTROL(-D, -dmso, +C)""     # F satırı: True Control"
"0","cond_matrix[""G"", 3:11] <- ""DMSO EFFECT(-D, 0.1% dmso, +C)""  # G satırı: DMSO etkisi"
"0","cond_matrix[""H"", 3:11] <- ""DEATH DOSE(-D, 5% dmso, +C)""     # H satırı: Ölüm dozu"
"0",""
"0","# Clean environment (geçici objeleri sil)"
"0","rm(rows, cols, dose_rows, dose_values, i)"
"0",""
"0","#  Create Empty 3D Array"
"0","absorbance_array <- array("
"0","  NA, "
"0","  dim = c(nrow(cond_matrix), ncol(cond_matrix), 3),"
"0","  dimnames = list("
"0","    rownames(cond_matrix),"
"0","    colnames(cond_matrix),"
"0","    c(""absorbance_t24"", ""absorbance_t48"", ""absorbance_t72"")"
"0","  )"
"0",")"
"0",""
"0",""
"0","#  Array'e yerleştir"
"0","absorbance_array[,, ""absorbance_t24""] <- t24"
"0","absorbance_array[,, ""absorbance_t48""] <- t48"
"0","absorbance_array[,, ""absorbance_t72""] <- t72"
"0",""
